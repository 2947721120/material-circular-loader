// Google color
$google_color_blue:   #4285f4; //old: #4285f4;
$google_color_green:  #34a853; //old: #0f9d58;
$google_color_yellow: #fbbc05; //old: #f4b400;
$google_color_red:    #ea4335; //old: #db4437;

// Custom
$load_L_Tail:   5deg;
$load_L_Body: 270deg;
$load_L_Foot: 360deg * (3 / 5);
$load_line_speed: 1333ms;
$load_timing_function: cubic-bezier(0.4, 0.0, 0.2, 1);
$load_line_width: 1em * ( 3 / 14);
$load_size:       1em * (28 / 14);

// Loading Line Degree
$load_L_Air: 360deg - $load_L_Body;
$load_L_S: $load_L_Tail * 2;
$load_L_L: $load_L_Tail * 2 + $load_L_Body;

// loading-circle Rotate Speed
$load_circle_rotate_foot_speed:   360deg / ($load_L_Foot + $load_L_Air) * $load_line_speed;
$load_circle_rotate_nofoot_speed: 360deg / (           0 + $load_L_Air) * $load_line_speed;

// loading-line Rotate Step
@function load_line_rotate_step($Body) {
  $D: 360deg;
  $step: 0;
  @while $D > 0deg {
    $D: $D - $Body;
    $step: $step + 1;
    @if $Body > $D and $D > 0deg { $D: $D + 360deg; }
  }
  @return $step * 2;
}
$load_line_rotate_step: load_line_rotate_step($load_L_Body);


// Keyframes
@keyframes L_circle_rotate {
  0%    { transform: rotate(  0deg); }
  100%  { transform: rotate(360deg); }
}
@keyframes L_line_rotate {
  @for $i from 0 through $load_line_rotate_step {
    #{$i/$load_line_rotate_step * 100%} {
      transform: rotate($load_L_Body/2 * $i);
    }
  }
}
@keyframes L_left_rotate {
  0%   { transform: rotate(0deg - $load_L_S/2); }
  50%  { transform: rotate(0deg - $load_L_L/2); }
  100% { transform: rotate(0deg - $load_L_S/2); }
}
@keyframes L_right_rotate {
  0%   { transform: rotate($load_L_S/2); }
  50%  { transform: rotate($load_L_L/2); }
  100% { transform: rotate($load_L_S/2); }
}
@keyframes L_line_color {
   0%, 15%  { border-color: $google_color_blue; }
  25%, 40%  { border-color: $google_color_red; }
  50%, 65%  { border-color: $google_color_yellow; }
  75%, 90%  { border-color: $google_color_green; }
  100%      { border-color: $google_color_blue; }
}

// Keyframes Function
@function L_circle_rotate_F($speed){
  @return L_circle_rotate $speed linear infinite both;
}
@function L_line_rotate_F(){
  @return L_line_rotate $load_line_speed*$load_line_rotate_step/2 $load_timing_function infinite both;
}
@function L_side_rotate_F($side){
  @return L_#{$side}_rotate $load_line_speed $load_timing_function infinite both;
}
@function L_line_color_F(){
  @return L_line_color $load_line_speed*4 $load_timing_function infinite both;
}

// Style Extend
@function other_side($side) {
  @if $side == right    { @return left; }
  @elseif $side == left { @return right; }
}
%before { content: ""; display: block; }
%loading_size {
  width: $load_size; height: $load_size;
  box-sizing: border-box;
  border-radius: 50%;
}
%loading_line {
  border-style: solid;
  border-width: $load_line_width;
  border-color: currentColor;
}
%loading_clip {
  &_right {
    position: absolute;
    clip: rect(0 $load_size $load_size $load_size/2);
  }
  &_left {
    position: absolute;
    clip: rect(0 $load_size/2 $load_size 0);
  }
  &_mid {
    position: absolute;
    clip: rect(0 $load_size/2 + .05em $load_size/2 $load_size/2 - .05em);
  }
}
@mixin loading_line_animation($google_color, $animation_list) {
  @if $google_color == 1 {
    $animation_list : append($animation_list, L_line_color_F());
  }
  animation: $animation_list;
}

// Loading Mixin
@mixin loading_circle($rotate_mode:0, $google_color:0) {
  @if $rotate_mode == 1 { animation: L_circle_rotate_F($load_circle_rotate_nofoot_speed);  }
  @else { animation: L_circle_rotate_F($load_circle_rotate_foot_speed); }
  &:before{
    $animation_list: (L_line_rotate_F(),);
    @include loading_line_animation($google_color, $animation_list);
  }
  
  @at-root .loading-circle {
    @extend %loading_size;
    &:before {
      @extend %before;
      @extend %loading_size;
      @extend %loading_clip_mid;
      @extend %loading_line;
    }
  }
  
  @each $side in (right, left) {
    .loading-line-#{$side} {
      animation: L_line_rotate_F();
      &:before{
        $animation_list: (L_side_rotate_F($side),);
        @include loading_line_animation($google_color, $animation_list);
      }
    }
    
    @at-root .loading-line-#{$side} {
      @extend %loading_size;
      @extend %loading_clip_#{$side};
      &:before {
        @extend %before;
        @extend %loading_size;
        @extend %loading_clip_#{other_side($side)};
        @extend %loading_line;
      }
    }
  }
}

//--------------------------------------------------

.loading-circle { @include loading_circle; }
.loading-circle.slow { @include loading_circle($rotate_mode:1); }
.loading-circle.google-color { @include loading_circle($google_color:1); }
.loading-circle.google-color.slow { @include loading_circle($rotate_mode:1, $google_color:1); }